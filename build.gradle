buildscript {
	ext {
		spring_boot_version = '1.5.6.RELEASE'
		swagger_version = '2.4.0'
		gson_fire_version = '1.8.3'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("io.swagger:swagger-codegen:$swagger_version")
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
	}
}

plugins {
    id 'java'
	id 'org.springframework.boot' version '2.1.1.RELEASE'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
	baseName = 'io-contentment-api'
	version =  '0.1.0'
}

version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

import io.swagger.codegen.config.CodegenConfigurator
import io.swagger.codegen.DefaultGenerator

def swaggerFile = file 'api/api.json'
def swaggerInput = swaggerFile.getAbsolutePath()
def swaggerOutputDir = file 'build/swagger'

task generateApi {
	inputs.file(swaggerInput)
	outputs.dir(swaggerOutputDir)
	doLast {
		def config = new CodegenConfigurator()
		config.setInputSpec(swaggerInput)
		config.setOutputDir(swaggerOutputDir.path)
		config.setLang('spring')
		config.setAdditionalProperties([
			'modelPackage'  : 'io.contentment.model',
			'apiPackage'    : 'io.contentment.api',
			'interfaceOnly' : true,
			'dateLibrary'	: 'java8',
			'library'		: 'spring-mvc'
		])
		new DefaultGenerator().opts(config.toClientOptInput()).generate()
	}
}

clean.doFirst {
	delete(swaggerOutputDir)
}

configurations {
	swagger
	compile.exclude group:'ch.qos.logback'
}

springBoot {
	mainClassName = 'io.contentment.Application'
}

sourceSets {
	swagger {
		compileClasspath = configurations.swaggerCompile
		java {
			srcDir file("${project.buildDir.path}/swagger/src/main/java")
		}
	}
	main {
		compileClasspath += swagger.output
		runtimeClasspath += swagger.output
	}
	test {
		compileClasspath += swagger.output
		runtimeClasspath += swagger.output
	}
}

compileSwaggerJava.dependsOn generateApi
classes.dependsOn swaggerClasses
compileJava.dependsOn compileSwaggerJava

dependencies {
	swaggerCompile 'io.swagger:swagger-annotations:1.5.16'
	swaggerCompile "io.gsonfire:gson-fire:$gson_fire_version"
	swaggerCompile "org.springframework.boot:spring-boot-starter-web:$spring_boot_version"

	compile "org.springframework.boot:spring-boot-starter-web:$spring_boot_version"
	compile "io.swagger:swagger-codegen:$swagger_version"
	compile "io.gsonfire:gson-fire:$gson_fire_version"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}
